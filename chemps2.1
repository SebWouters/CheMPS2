.\" Manpage for chemps2 executable
.\" Contact sebastianwouters [at] gmail.com
.TH CHEMPS2 1 "1 February 2021" "version 1.8.10" "chemps2 v1.8.10"

.SH NAME
chemps2 \- spin-adapted DMRG for ab initio quantum chemistry

.SH SYNOPSIS
.B chemps2
.RI "[" "OPTION" "]"
.RI "..."

.SH DESCRIPTION
\fBchemps2\fR is a scientific code to perform spin-adapted density matrix renormalization group (DMRG) calculations for ab initio quantum chemistry fcidump files. This method allows one to obtain numerical accuracy in active spaces beyond the capabilities of full configuration interaction (FCI) and can return the active space 2-, 3-, and 4-RDM. The method is therefore ideal to replace the FCI solver in the complete active space self consistent field (CASSCF) and complete active space second order perturbation theory (CASPT2) methods. The link to the user manual can be found in the section \fBSEE ALSO\fR.

.SH OPTIONS
.SS SYMMETRY
Conventions for the symmetry group and irrep numbers (same as psi4):
.PP
.EX
                 |  0    1    2    3    4    5    6    7   
        ---------|-----------------------------------------
        0 : c1   |  A                                      
        1 : ci   |  Ag   Au                                
        2 : c2   |  A    B                                 
        3 : cs   |  Ap   App                               
        4 : d2   |  A    B1   B2   B3                      
        5 : c2v  |  A1   A2   B1   B2                      
        6 : c2h  |  Ag   Bg   Au   Bu                      
        7 : d2h  |  Ag   B1g  B2g  B3g  Au   B1u  B2u  B3u 
.EE
.SS ARGUMENTS
.TP
.BR "\-f" ", " "\-\-file=\fIinputfile\fB"
Specify the input file.
.TP
.BR "\-v" ", " "\-\-version"
Print the version of chemps2.
.TP
.BR "\-h" ", " "\-\-help"
Display this help.
.SS INPUT FILE
.TP
.BR "FCIDUMP = \fI/path/to/fcidump\fB"
Note that orbital irreps in the FCIDUMP file follow molpro convention!
.TP
.BR "GROUP = \fIint\fB"
Set the psi4 symmetry group number [0\-7] which corresponds to the FCIDUMP file.
.TP
.BR "MULTIPLICITY = \fIint\fB"
Overwrite the spin multiplicity [2S+1] of the FCIDUMP file.
.TP
.BR "NELECTRONS = \fIint\fB"
Overwrite the number of electrons of the FCIDUMP file.
.TP
.BR "IRREP = \fIint\fB"
Overwrite the target wavefunction irrep [0\-7] of the FCIDUMP file (psi4 convention).
.TP
.BR "EXCITATION = \fIint\fB"
Set which excitation should be calculated. If zero, the ground state is calculated (default 0).
.TP
.BR "SWEEP_STATES = \fIint,int,int\fB"
Set the number of reduced renormalized basis states for the successive sweep instructions (positive integers).
.TP
.BR "SWEEP_ENERGY_CONV = \fIflt,flt,flt\fB"
Set the energy convergence to stop the successive sweep instructions (positive floats).
.TP
.BR "SWEEP_MAX_SWEEPS = \fIint,int,int\fB"
Set the maximum number of sweeps for the successive sweep instructions (positive integers).
.TP
.BR "SWEEP_NOISE_PREFAC = \fIflt,flt,flt\fB"
Set the noise prefactors for the successive sweep instructions (floats).
.TP
.BR "SWEEP_DVDSON_RTOL = \fIflt,flt,flt\fB"
Set the residual norm tolerance for the Davidson algorithm for the successive sweep instructions (positive floats).
.TP
.BR "NOCC = \fIint,int,int,int\fB"
Set the number of occupied (external core) orbitals per irrep (psi4 irrep ordering).
.TP
.BR "NACT = \fIint,int,int,int\fB"
Set the number of active orbitals per irrep (psi4 irrep ordering).
.TP
.BR "NVIR = \fIint,int,int,int\fB"
Set the number of virtual (secondary) orbitals per irrep (psi4 irrep ordering).
.TP
.BR "MOLCAS_2RDM = \fI/path/to/2rdm/output\fB"
When all orbitals are active orbitals, write out the 2-RDM in HDF5 format when specified (default unspecified).
.TP
.BR "MOLCAS_3RDM = \fI/path/to/3rdm/output\fB"
When all orbitals are active orbitals, write out the 3-RDM in HDF5 format when specified (default unspecified).
.TP
.BR "MOLCAS_F4RDM = \fI/path/to/f4rdm/output\fB"
When all orbitals are active orbitals, write out the 4-RDM contracted with the Fock operator in HDF5 format when specified (default unspecified).
.TP
.BR "MOLCAS_FOCK = \fI/path/to/fock/input\fB"
When all orbitals are active orbitals, read in this file containing the Fock operator (default unspecified).
.TP
.BR "MOLCAS_FIEDLER = \fIbool\fB"
When all orbitals are active orbitals, switch on orbital reordering based on the Fiedler vector of the exchange matrix (TRUE or FALSE; default FALSE).
.TP
.BR "MOLCAS_ORDER = \fIint,int,int,int\fB"
When all orbitals are active orbitals, provide a custom orbital reordering (default unspecified). When specified, this option takes precedence over MOLCAS_FIEDLER.
.TP
.BR "MOLCAS_OCC = \fIint,int,int,int\fB"
When all orbitals are active orbitals, set initial guess to an ROHF determinant (default unspecified). The occupancy integers should be 0, 1 or 2 and the orbital ordering convention is FCIDUMP.
.TP
.BR "MOLCAS_MPS = \fIbool\fB"
When all orbitals are active orbitals, switch on the creation of MPS checkpoints (TRUE or FALSE; default FALSE).
.TP
.BR "MOLCAS_STATE_AVG = \fIbool\fB"
Switch on writing to disk of N-RDMs of intermediate roots (TRUE or FALSE; default FALSE).
.TP
.BR "SCF_STATE_AVG = \fIbool\fB"
Switch on state\-averaging (TRUE or FALSE; default FALSE).
.TP
.BR "SCF_DIIS_THR = \fIflt\fB"
Switch on DIIS when the update norm is smaller than the given threshold (default 0.0).
.TP
.BR "SCF_GRAD_THR = \fIflt\fB"
Gradient norm threshold for convergence of the DMRG\-SCF orbital rotations (default 1e\-6).
.TP
.BR "SCF_MAX_ITER = \fIint\fB"
Specify the maximum number of DMRG\-SCF iterations (default 100).
.TP
.BR "SCF_ACTIVE_SPACE = \fIchar\fB"
Rotate the active space orbitals: no additional rotations (I), natural orbitals (N), localized and ordered orbitals (L), or ordered orbitals only (F) (default I).
.TP
.BR "SCF_MOLDEN = \fI/path/to/molden\fB"
Rotate the FCIDUMP orbitals to the DMRG-SCF occupied (external core), active, and virtual (secondary) orbitals.
.TP
.BR "CASPT2_CALC = \fIbool\fB"
Switch on the CASPT2 calculation (TRUE or FALSE; default FALSE).
.TP
.BR "CASPT2_ORBS = \fIchar\fB"
Perform the DMRG calculation for the 4\-RDM in the SCF_ACTIVE_SPACE orbitals (A) or in the pseudocanonical orbitals (P) (default A).
.TP
.BR "CASPT2_IPEA = \fIflt\fB"
Ionization potential \- electron affinity shift (default 0.0).
.TP
.BR "CASPT2_IMAG = \fIflt\fB"
Imaginary level shift (default 0.0).
.TP
.BR "CASPT2_CHECKPT = \fIbool\fB"
Create checkpoints to continue the CASPT2 4\-RDM calculation over multiple runs (TRUE or FALSE; default FALSE).
.TP
.BR "CASPT2_CUMUL = \fIbool\fB"
Use a cumulant approximation for the CASPT2 4\-RDM and overwrite CASPT2_CHECKPT to FALSE (TRUE or FALSE; default FALSE).
.TP
.BR "PRINT_CORR = \fIbool\fB"
Print correlation functions (TRUE or FALSE; default FALSE).
.TP
.BR "TMP_FOLDER = \fI/path/to/tmp/folder\fB"
Overwrite the tmp folder for the renormalized operators. With MPI, separate folders per process can (but do not have to) be used (default /tmp).
.SS EXAMPLE
.PP
.EX
 $ cd /tmp
 $ wget 'https://github.com/SebWouters/CheMPS2/raw/master/tests/matrixelements/N2.CCPVDZ.FCIDUMP'
 $ ls \-al N2.CCPVDZ.FCIDUMP
 $ wget 'https://github.com/SebWouters/CheMPS2/raw/master/tests/test14.input'
 $ sed \-i "s/path\\/to/tmp/" test14.input
 $ cat test14.input
 $ chemps2 \-\-file=test14.input
.EE

.SH AUTHOR
Written by
Sebastian Wouters <\&\%sebastianwouters@gmail\&.com\&>

.SH BUGS
Reporting bugs:
\fI\%https://github.com/sebwouters/CheMPS2/issues\fR

.SH SEE ALSO
User manual:
\fI\%http://sebwouters.github.io/CheMPS2/index.html\fR

.SH COPYRIGHT
.EX
CheMPS2: a spin-adapted implementation of DMRG for ab initio quantum chemistry
Copyright (C) 2013-2021 Sebastian Wouters

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License along
with this program; if not, write to the Free Software Foundation, Inc.,
51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
.EE

